// <auto-generated />
using System;
using BrewLog.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrewLog.Api.Migrations
{
    [DbContext(typeof(BrewLogDbContext))]
    [Migration("20250830214622_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BrewLog.Api.Models.BrewSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("BrewTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BrewingEquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoffeeBeanId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GrindSettingId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TastingNotes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("WaterTemperature")
                        .HasPrecision(5, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrewingEquipmentId");

                    b.HasIndex("CoffeeBeanId");

                    b.HasIndex("GrindSettingId");

                    b.ToTable("BrewSessions");
                });

            modelBuilder.Entity("BrewLog.Api.Models.BrewingEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BrewingEquipment");
                });

            modelBuilder.Entity("BrewLog.Api.Models.CoffeeBean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("RoastLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CoffeeBeans");
                });

            modelBuilder.Entity("BrewLog.Api.Models.GrindSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GrindSize")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("GrindTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GrindWeight")
                        .HasPrecision(6, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("GrinderType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GrindSettings");
                });

            modelBuilder.Entity("BrewLog.Api.Models.BrewSession", b =>
                {
                    b.HasOne("BrewLog.Api.Models.BrewingEquipment", "BrewingEquipment")
                        .WithMany("BrewSessions")
                        .HasForeignKey("BrewingEquipmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BrewLog.Api.Models.CoffeeBean", "CoffeeBean")
                        .WithMany("BrewSessions")
                        .HasForeignKey("CoffeeBeanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BrewLog.Api.Models.GrindSetting", "GrindSetting")
                        .WithMany("BrewSessions")
                        .HasForeignKey("GrindSettingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BrewingEquipment");

                    b.Navigation("CoffeeBean");

                    b.Navigation("GrindSetting");
                });

            modelBuilder.Entity("BrewLog.Api.Models.BrewingEquipment", b =>
                {
                    b.Navigation("BrewSessions");
                });

            modelBuilder.Entity("BrewLog.Api.Models.CoffeeBean", b =>
                {
                    b.Navigation("BrewSessions");
                });

            modelBuilder.Entity("BrewLog.Api.Models.GrindSetting", b =>
                {
                    b.Navigation("BrewSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
